
spring:
  application:
    name: account-service
  datasource:
    url: jdbc:postgresql://localhost:5433/banking_db
    username: postgres
    password: admin
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 10000
      connection-timeout: 10000
      max-lifetime: 10000
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    baseline-version: 0
    validate-on-migrate: true
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    open-in-view: false

  #    properties:
#      hibernate:
#        format_sql: true
#        dialect: org.hibernate.dialect.PostgreSQLDialect
  rabbitmq:
    host: localhost
    port: 5673
    username: guest
    password: guest
  output:
    ansi:
      enabled: always

server:
  port: 8080
#  servlet:
#    context-path: /api/v1

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}

springdoc:
  packagesToScan: com.synapsecode.accountservice.controllers

logging:
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss}){blue} %clr([%X{traceId:-},%X{spanId:-}]){cyan} %clr(${LOG_LEVEL_PATTERN:-%5p}) %m%n"
  level:
    com.banking.accountservice: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG

#app:
#  notification:
#    enabled: true
#  security:
#    allowed-origins: http://localhost:3000
#  audit:
#    enabled: true