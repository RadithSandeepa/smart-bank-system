name: Smart Bank System - CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: eu-north-1
  ECR_REGISTRY: <your-aws-account-id>.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

jobs:
  # Build All Microservices (Same as before)

  build-card-service:
    name: Build Card Service (Node + Mongo)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./card-service
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npm run build
      - run: docker build -t card-service .

  build-user-service:
    name: Build User Service (Node)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./user-service
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: docker build -t user-service .

  build-test-node:
    name: Build Test Node Service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./test-node
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npm run build
      - run: docker build -t test-node .

  build-discovery-service:
    name: Build Discovery Service (Spring Boot)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./discovery-service
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - run: mvn clean package
      - run: docker build -t discovery-service .

  build-gateway-service:
    name: Build Gateway Service (Spring Boot)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./gateway-service
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - run: mvn clean package
      - run: docker build -t gateway-service .

  build-account-service:
    name: Build Account Service (Spring Boot)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./account-service
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - run: mvn clean package
      - run: docker build -t account-service .

  build-transaction-service:
    name: Build Transaction Service (Node)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./transaction-service
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: docker build -t transaction-service .

  # CI/CD Job: Push to ECR and Deploy to ECS
  deploy-to-ecs:
    name: Deploy All Services to ECS
    runs-on: ubuntu-latest
    needs:
      - build-card-service
      - build-user-service
      - build-test-node
      - build-discovery-service
      - build-gateway-service
      - build-account-service
      - build-transaction-service
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Push All Docker Images to ECR (ADDED)
      - run: |
          for service in card-service user-service test-node discovery-service gateway-service account-service transaction-service
          do
            docker tag $service:latest $ECR_REGISTRY/$service:latest
            docker push $ECR_REGISTRY/$service:latest
          done

      # Update ECS Services (ADDED)
      - run: |
          for service in card-service user-service test-node discovery-service gateway-service account-service transaction-service
          do
            aws ecs update-service \
              --cluster banking-cluster \
              --service $service \
              --force-new-deployment
          done
