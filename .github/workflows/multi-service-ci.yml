name: Smart Bank System - CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-card-service:
    name: Build Card Service (Node + Mongo)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./card-service
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npm run build
      - run: docker build -t card-service .

  build-user-service:
    name: Build User Service (Node)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./user-service
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      # - run: npm run build
      - run: docker build -t user-service .

  build-test-node:
    name: Build Test Node Service
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./test-node
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      - run: npm run build
      - run: docker build -t test-node .

  build-discovery-service:
    name: Build Discovery Service (Spring Boot)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./discovery-service
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - run: mvn clean package
      - run: docker build -t discovery-service .

  build-gateway-service:
    name: Build Gateway Service (Spring Boot)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./gateway-service
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - run: mvn clean package
      - run: docker build -t gateway-service .

  build-account-service:
    name: Build Account Service (Spring Boot)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./account-service
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - run: mvn clean package
      - run: docker build -t account-service .

  build-transaction-service:
    name: Build Transaction Service (Node or Java)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./transaction-service
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm install
      # - run: npm run build
      - run: docker build -t transaction-service .

  build-config-service:
    name: Build Config Service (Spring Boot)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./config-service
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - run: mvn clean package
      - run: docker build -t config-service .
