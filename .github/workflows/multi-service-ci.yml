# name: Smart Bank System - CI Pipeline

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]

# jobs:
#   build-card-service:
#     name: Build Card Service (Node + Mongo)
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ./card-service
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-node@v3
#         with:
#           node-version: 18
#       - run: npm install
#       - run: npm run build
#       - run: docker build -t card-service .

#   build-user-service:
#     name: Build User Service (Node)
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ./user-service
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-node@v3
#         with:
#           node-version: 18
#       - run: npm install
#       # - run: npm run build
#       - run: docker build -t user-service .

#   build-test-node:
#     name: Build Test Node Service
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ./test-node
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-node@v3
#         with:
#           node-version: 18
#       - run: npm install
#       - run: npm run build
#       - run: docker build -t test-node .

#   build-discovery-service:
#     name: Build Discovery Service (Spring Boot)
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ./discovery-service
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'temurin'
#       - run: mvn clean package
#       - run: docker build -t discovery-service .

#   build-gateway-service:
#     name: Build Gateway Service (Spring Boot)
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ./gateway-service
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'temurin'
#       - run: mvn clean package
#       - run: docker build -t gateway-service .

#   build-account-service:
#     name: Build Account Service (Spring Boot)
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ./account-service
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'temurin'
#       - run: mvn clean package
#       - run: docker build -t account-service .

#   build-transaction-service:
#     name: Build Transaction Service (Node or Java)
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ./transaction-service
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-node@v3
#         with:
#           node-version: 18
#       - run: npm install
#       # - run: npm run build
#       - run: docker build -t transaction-service .

#   build-config-service:
#     name: Build Config Service (Spring Boot)
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ./config-service
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'temurin'
#       - run: mvn clean package
#       - run: docker build -t config-service .


name: Smart Banking CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-dockerize:
    name: Build & Dockerize All Services
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4                                   # Checkout the monorepo root :contentReference[oaicite:4]{index=4}

      - name: Set up JDK 17 & cache Maven
        uses: actions/setup-java@v4                                 # Java and dependency caching :contentReference[oaicite:5]{index=5}
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Build all Java modules
        run: mvn --batch-mode clean install -DskipTests              # Installs parent POM + submodules without build-image :contentReference[oaicite:6]{index=6}

      - name: Build Docker images
        run: |
          # Spring Boot services
          docker build -t banking/config-service:${{ github.sha }} config-service    # :contentReference[oaicite:7]{index=7}
          docker build -t banking/discovery-service:${{ github.sha }} discovery-service
          docker build -t banking/gateway-service:${{ github.sha }} gateway-service
          docker build -t banking/account-service:${{ github.sha }} account-service
          
          # Node-based business services
          docker build -t banking/test-node:${{ github.sha }} test-node
          docker build -t banking/user-service:${{ github.sha }} user-service
          docker build -t banking/card-service:${{ github.sha }} card-service
          docker build -t banking/transaction-service:${{ github.sha }} transaction-service

      # Uncomment the following to push to Docker Hub or another registry:
      #- name: Log in to Docker Hub
      #  uses: docker/login-action@v3                                  # Authenticate to Docker registry :contentReference[oaicite:8]{index=8}
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USER }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}
      #
      #- name: Push images
      #  run: |
      #    docker push banking/config-service:${{ github.sha }}
      #    docker push banking/discovery-service:${{ github.sha }}
      #    â€¦etc.
